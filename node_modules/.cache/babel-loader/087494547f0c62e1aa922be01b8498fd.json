{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unite\\\\OneDrive - Douglas College\\\\Desktop\\\\CSIS 3380 React App\\\\food-order-app\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\"; //Reducer is out of component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  item: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item); // concat, create a new array instead of editing old array\n\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {}\n\n  return defaultCartState; // new state\n}; // CartProvider Component\n\n\nconst CartProvider = props => {\n  _s();\n\n  // Component new state[] = useReducer(reducer, state)\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/unite/OneDrive - Douglas College/Desktop/CSIS 3380 React App/food-order-app/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","item","totalAmount","cartReducer","state","action","type","updatedItems","items","concat","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,IAAI,EAAE,EADiB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBJ,MAAM,CAACJ,IAA1B,CAArB,CADyB,CAEzB;;AACA,UAAMS,kBAAkB,GACtBN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACJ,IAAP,CAAYU,KAAZ,GAAoBN,MAAM,CAACJ,IAAP,CAAYW,MADtD;AAEA,WAAO;AACLJ,MAAAA,KAAK,EAAED,YADF;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AAED,MAAIL,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B,CAC7B;;AAED,SAAON,gBAAP,CAfqC,CAeZ;AAC1B,CAhBD,C,CAkBA;;;AAEA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B;AACA,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,QAAMiB,oBAAoB,GAAIhB,IAAD,IAAU;AACrCe,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeL,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMiB,yBAAyB,GAAIC,EAAD,IAAQ;AACxCH,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBa,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAClBZ,IAAAA,KAAK,EAAEO,SAAS,CAACP,KADC;AAElBN,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFL;AAGlBmB,IAAAA,OAAO,EAAEJ,oBAHS;AAIlBK,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BD;;GAAMV,Y;;KAAAA,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\n//Reducer is out of component\r\n\r\nconst defaultCartState = {\r\n  item: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedItems = state.items.concat(action.item);\r\n    // concat, create a new array instead of editing old array\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"REMOVE\") {\r\n  }\r\n\r\n  return defaultCartState; // new state\r\n};\r\n\r\n// CartProvider Component\r\n\r\nconst CartProvider = (props) => {\r\n  // Component new state[] = useReducer(reducer, state)\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}